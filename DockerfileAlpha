# Wählen des leichteren Node-Basisimage
FROM node:18-alpine

# Installieren von Abhängigkeiten für nvm und Node.js
# Installiere nur die notwendigen Pakete. Alpine verwendet apk statt apt-get.
RUN apk add --no-cache curl bash coreutils

# Installieren von nvm (Node Version Manager)
ENV NVM_DIR /usr/local/nvm
ENV NODE_VERSION 18.4.0

# Erstellen des NVM_DIR und Installieren von NVM
RUN mkdir -p $NVM_DIR \
    && curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash \
    && . $NVM_DIR/nvm.sh \
    && nvm install $NODE_VERSION \
    && nvm use $NODE_VERSION \
    && nvm alias default $NODE_VERSION

# Fügen Sie /usr/local/nvm/versions/node/v<$NODE_VERSION>/bin zum PATH hinzu
ENV PATH $NVM_DIR/versions/node/v$NODE_VERSION/bin:$PATH

# Setzen des Arbeitsverzeichnis im Container
WORKDIR /app

# Kopieren der Projektdateien in das Arbeitsverzeichnis
COPY . .
# Installieren der Projekt-Abhängigkeiten
# Beachten Sie, dass npm ci anstelle von npm install verwendet wird für schnelleres, zuverlässigeres Installieren
RUN npm install

# Erstellen einer .env-Datei und Hinzufügen von Umgebungsvariablen
RUN echo "PUBLIC_BASE_URL=https://alpha.c930.net" > .env && \
    echo "PRIVATE_GEO_API_KEY=<YOUR-GEO-API-KEY>" >> .env

# Bauen der Anwendung für die Produktion
RUN npm run build

# Der Port, auf dem der Container laufen soll
EXPOSE 4173

# Starten der App
CMD ["npm", "run", "preview"]
